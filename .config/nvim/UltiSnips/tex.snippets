# Gilles Castel TeX snippets

global !p
def math():
  return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
  return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
  [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
  return x != '0' and y != '0'

endglobal

snippet beg "begin{} / end{}" bA
\\begin{$1}
  $0
\\end{$1}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

# snippet table "Table environment" b
# \begin{table}[${1:htpb}]
# \centering
# \caption{${2:caption}}
# \label{tab:${3:label}}
# \begin{tabular}{${5:c}}
# $0${5/((?<=.)c|l|r)|./(?1: & )/g}
# \end{tabular}
# \end{table}
# endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
  \item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
  \item $0
\end{itemize}
endsnippet

# snippet desc "Description" b
# \begin{description}
#   \item[$1] $0
# \end{description}
# endsnippet

# snippet pac "Package" b
# \usepackage[${1:options}]{${2:package}}$0
# endsnippet

snippet => "implies" Ai
\implies 
endsnippet

snippet =< "implied by" Ai
\impliedby 
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
  snip.rv = ' '
else:
  snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
.\]
$0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
  if stripped[i] == ')': depth += 1
  if stripped[i] == '(': depth -= 1
  if depth == 0: break;
  i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

# snippet == "equals" iA
# &= $1 \\\\
# endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

# snippet pmat "pmat" iA
# \begin{pmatrix} $1 \end{pmatrix} $0
# endsnippet

# snippet bmat "bmat" iA
# \begin{bmatrix} $1 \end{bmatrix} $0
# endsnippet

# snippet lra "leftangle rightangle" iA
# \left<${1:${VISUAL}} \right>$0
# endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

# snippet taylor "taylor" w
# \sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
# endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

# snippet part "d/dx" w
# \frac{\partial ${1:V}}{\partial ${2:x}} $0
# endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\mathbb{N}}}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet R0+ "R0+" iA
\\mathbb{R}_0^+
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

# context "math()"
# snippet nabl "nabla" iA
# \nabla 
# endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

# context "math()"
# snippet compl "complement" iA
# ^{c}
# endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet

snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

snippet || "mid" iA
 \mid 
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet

snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet OO "emptyset" iA
\emptyset
endsnippet

snippet NN "n" iA
\mathbb{N}
endsnippet

snippet RR "real" iA
\mathbb{R}
endsnippet

snippet QQ "Q" iA
\mathbb{Q}
endsnippet

snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

# snippet <! "normal" iA
# \triangleleft 
# endsnippet

# snippet <> "hokje" iA
# \diamond 
# endsnippet

# context "math()"
# snippet '(?<!i)sts' "text subscript" irA
# _\text{$1} $0
# endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

# snippet SI "SI" iA
# \SI{$1}{$2}
# endsnippet

# snippet bigfun "Big function" iA
# \begin{align*}
#   $1: $2 &\longrightarrow $3 \\\\
#   $4 &\longmapsto $1($4) = $0
# .\end{align*}
# endsnippet

# snippet cvec "column vector" iA
# \begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
# endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

# snippet letw "let omega" iA
# Let $\Omega \subset \mathbb{C}$ be open.
# endsnippet

snippet HH "H" iA
\mathbb{H}
endsnippet

snippet DD "D" iA
\mathbb{D}
endsnippet

# A few snippets edited from Gilles Castel's snippets

context "math()"
snippet norm "norm" iA
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet bra "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet cur "left{ right}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet sbra[ "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
  ${1:${VISUAL}} &= ${2:value}
.\end{align*}
endsnippet

# My own snippets

snippet template "Create template" b
\documentclass[12pt]{scrartcl}

\usepackage[sexy]{evan}
\usepackage{packs}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\title{${1:Title}}
\author{${2:Avigyan Chakraborty}}
\date{\today}

\begin{document}

\maketitle

\section{${3:Section Header}}

$0

\end{document}
endsnippet

context "math()"
snippet vp "p-adic" iA
\nu_{${1:p}}{$2}$0
endsnippet

context "math()"
priority 10
snippet ang "angle" iA
\angle 
endsnippet

context "math()"
priority 100
snippet dang "directed angle" iA
\measuredangle 
endsnippet

context "math()"
snippet achas "angle chase" iA
\angle $1=\angle $2=\angle $3=\angle $0
endsnippet

context "math()"
snippet dchas "dangle chase" iA
\measuredangle $1=\measuredangle $2=\measuredangle $3=\measuredangle $0
endsnippet

context "math()"
snippet dg "degree" iA
^{\circ}
endsnippet

priority 10000
context "math()"
snippet de9 "90 degree" iA
90^{\circ}
endsnippet

priority 10000
context "math()"
snippet de1 "180 degree" iA
180^{\circ}
endsnippet

context "math()"
snippet cir "circumcircle" iA
\odot($1)$0
endsnippet

context "math()"
snippet pow "power of point" iA
\operatorname{Pow}_{$2}($1)$0
endsnippet

context "math()"
snippet pfact "prime factorization" iA
p_1^{${1:e}_1}\cdot p_2^{${2:e}_2}\cdots p_{${3:n}}^{${4:e}_${5:n}}
endsnippet

snippet fig "figure template" b
\begin{figure}[${1:htpb}]
  \centering
  \includegraphics[width=\textwidth,keepaspectratio]{images/$2}
  \caption{$3}
  \label{fig:$4}
\end{figure}$0
endsnippet

context "math()"
snippet derv "derivative" iA
\frac{\mathrm{d}${1:f(x)}}{\mathrm{d}${2:x}}
endsnippet

context "math()"
snippet ddx "derivative" iA
\mathrm{d}x 
endsnippet

context "math()"
snippet ddy "derivative" iA
\mathrm{d}y 
endsnippet

context "math()"
snippet ddt "derivative" iA
\mathrm{d}t 
endsnippet

context "math()"
snippet ddr "derivative" iA
\mathrm{d}${1:r} 
endsnippet

context "math()"
snippet casi "case item" iA
${1:value}, & \text{if } ${2:condition}
endsnippet

context "math()"
snippet case "cases" wA
${1:${VISUAL}} = \left\\{\begin{array}{ll}
  ${2:value}, & \text{if } ${3:condition}
  \end{array}\right.
endsnippet

context "math()"
snippet para "parallel" iA
\parallel 
endsnippet

context "math()"
snippet tri "triangle" iA
\triangle 
endsnippet

priority 100
snippet *.. "cdots" iA
\cdots
endsnippet

context "math()"
snippet opname "operatorname" iA
\operatorname{$1}
endsnippet

# vim:ft=snippets:
