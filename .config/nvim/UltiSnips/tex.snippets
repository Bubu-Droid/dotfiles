# TeX snippets by Bubu
# Most of the snippets are copied from Gilles Castel's snippet file
# https://github.com/gillescastel/latex-snippets/blob/master/tex.snippets



# {{{ Setting up enviromments

global !p
def math():
  return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
  return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
  [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
  return x != '0' and y != '0'

endglobal

# }}}


# SNIPPETS start from here


# {{{ Template

snippet template "create template" b
\documentclass[12pt]{scrartcl}

\usepackage{bubu}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\title{$1}
\author{Avigyan Chakraborty}
\date{\today}

\begin{document}

\maketitle
%\tableofcontents
%\newpage

\section{$2}

$0

\end{document}
endsnippet

# }}}


# {{{ Environments

snippet beg "begin{} / end{}" bA
\begin{$1}
  $2
\end{$1}
$0
endsnippet

snippet table "table environment" b
\begin{table}[${1:htbp}]
\label{tab:${3:label}}
\centering
\begin{tabular}{||${4:c c c}||}

\hline
Col1 & Col2 & Col3 \\\\ [0.5ex]$5
\hline\hline

1 & 2 & 3 \\\\
\hline

\end{tabular}
\caption{${2:caption}}
\end{table}
$0
endsnippet

snippet enum "enumerate" bA
\begin{enumerate}
  \ii $1
\end{enumerate}
$0
endsnippet

snippet item "itemize" bA
\begin{itemize}
  \ii $1
\end{itemize}
$0
endsnippet

snippet fig "figure template" b
\begin{figure}[${1:htbp}]
  \centering
  \includegraphics[width=\textwidth,keepaspectratio]{images/$2}
  \caption{$3}
	\label{fig:${4:label}}
\end{figure}
endsnippet

snippet ali "align" bA
\begin{align*}
  ${1:${VISUAL}}
  &= ${2:value}
.\end{align*}
endsnippet

context "math()"
snippet case "case" iA
\begin{cases}
	${1:value}, & \text{if } ${2:condition}
.\end{cases}$0
endsnippet

context "math()"
snippet casi "case item" iA
${1:value}, & \text{if } ${2:condition}
endsnippet

# }}}


# {{{ Math symbol snippets

priority 100
context "math()"
snippet ... "ldots" iA
\ldots 
endsnippet

context "math()"
snippet => "implies" iA
\implies 
endsnippet

context "math()"
snippet =< "implied by" iA
\impliedby 
endsnippet

context "math()"
snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet sum "sum" iA
\sum_{$1}^{$2} ${3:${VISUAL}} 
endsnippet

context "math()"
snippet prod "product" iA
\prod_{$1}^{$2} ${3:${VISUAL}} 
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{$1} 
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1} $0
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

context "math()"
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet *.. "cdots" iA
\cdots 
endsnippet

context "math()"
snippet inn "in" iA
\in 
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow 
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus 
endsnippet

context "math()"
snippet >> ">>" iA
\gg 
endsnippet

context "math()"
snippet << "<<" iA
\ll 
endsnippet

context "math()"
snippet cC "subset" iA
\subseteq 
endsnippet

# }}}


# {{{ Math environments

snippet mk "inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
  snip.rv = ' '
else:
  snip.rv = ''
`$2
endsnippet

snippet dm "display math" wA
\[
${1:${VISUAL}}
.\]
$0
endsnippet

# }}}


# {{{ Fractions

context "math()"
snippet // "fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet / "fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
  if stripped[i] == ')': depth += 1
  if stripped[i] == '(': depth -= 1
  if depth == 0: break;
  i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

# }}}


# {{{ Subscripts

priority 10
context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

priority 10
context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript 2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

priority 20
context "math()"
snippet '\b([A-Za-z])([A-Za-z])\2\b' "auto subscript 3" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

priority 100
context "math()"
snippet '([A-Za-z])p(\d+)' "var_n+digit" rwA
`!p snip.rv = match.group(1)`_{n+`!p snip.rv = match.group(2)`}
endsnippet

priority 100
context "math()"
snippet '([A-Za-z])m(\d+)' "var_n-digit" rwA
`!p snip.rv = match.group(1)`_{n-`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1} $0
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1} $0
endsnippet

# }}}


# {{{ Brackets

context "math()"
snippet bra "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet cur "left{ right}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

# }}}


# {{{ Math Operators

priority 200
context "math()"
snippet '(?<!\\)\b(arcsin|arccos|arctan|arccsc|arcsec|arccot)\b' "inverse trig" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\)\b(sin|cos|tan|csc|sec|cot)\b' "trig" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\)\b(ln|log|exp|cis|zeta)\b' "math functions 1" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\)\b(gcd|lcm|sgn|argmin|argmax)\b' "math functions 2" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\)\b(floor|ceil|abs|norm|id|opname)\b' "math functions 4" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\)\b(star|pi|eps|iff|bigcup|bigcap|inv)\b' "math symbols 1" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\)\b(tri|para|dg|ang|dang|perp)\b' "math symbols 2" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\)\b(ul|wt|wh|ray|oo|cong|OO)\b' "math symbols 3" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\)\b(emptyset|cap|cup|not|nmid|mid|sim|neq|ell)\b' "math symbols 4" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\)\b(ZZ|QQ|NN|RR|CC|FF)\b' "mathbb stuff" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 10
snippet '(?<!\\)\b(ii)\b' "ii" wrA
\\ii 
endsnippet

# }}}


# {{{ Oly commands

priority 10
context "math()"
snippet "bar" "bar" riA
\ol{$1} $0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\ol{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1} $0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet vp "p-adic" iA
\vp{$1}{$2} 
endsnippet

context "math()"
snippet pow "power of point" iA
\Pow{$1}{$2} 
endsnippet

context "math()"
snippet achas "angle chase" iA
\ang $1=\ang $2=\ang $3=\ang 
endsnippet

context "math()"
snippet dchas "dangle chase" iA
\dang $1=\dang $2=\dang $3=\dang 
endsnippet

context "math()"
snippet cir "circumcircle" iA
\odot($1)
endsnippet

context "math()"
snippet pfact "prime factorization" iA
p_1^{e_1}\cdot p_2^{e_2}\cdot\ldots\cdot p_{n}^{e_n} 
endsnippet

# }}}


# {{{ Calculus commands

priority 300
context "math()"
snippet dint "double integral" iA
\iint\limits_{$1} ${VISUAL}$0
endsnippet

priority 100
context "math()"
snippet int "integral" iA
\int_{$1}^{$2} $0
endsnippet

priority 100
context "math()"
snippet dd. "dx" iA
\\mathrm{d}
endsnippet

context "math()"
snippet lim "limit" iA
\lim_{$1 \to $2} 
endsnippet

context "math()"
snippet lsup "limsup" iA
\limsup_{$1 \to $2} 
endsnippet

context "math()"
snippet linf "liminf" iA
\liminf_{$1 \to $2} 
endsnippet

context "math()"
snippet ddd "derivative" iA
\dd{$1}{$2} 
endsnippet

context "math()"
snippet ddn "nth derivative" iA
\dd[$1]{$2}{$3} 
endsnippet

context "math()"
snippet pdd "partial derivative" iA
\pd{$1}{$2} 
endsnippet

context "math()"
snippet pdn "nth partial derivative" iA
\pd[$1]{$2}{$3} 
endsnippet

# }}}


# vim:ft=snippets:
