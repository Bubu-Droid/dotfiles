ls
  lists all the contents of the directory
  -l : displays the content in detailed view
  -lh : displays the file size in a more human readable format
  clear : clears the cmd
  -a : lists all the files and directory including the hidden files 
        (you can combine it as ls -lah)
  -ld <dir name> : describes the info about only that dir
  -S : sorts by the file size
  -t : sorts by the time of the file creation
  -v : sorts by the version
  -X : sorts by the extension
  -r : reverses the order of the list

pwd: prints the current working directory
cd
  .. : go to the parent dir
  ~ : go to /home/<usr> directory directly

mkdir
  <dir_name_1> <dir_name_2> <dir_name_3> : makes all the directory 
        with the names specified
  -v <dir_name> : this verbose flag prints out the status after
        running the command (for e.g. whether the directory was
        created successfully or not)
  -p <dir_name_1/dir_name_2/dir_name_3> : creates the specified 
      path of the directory which couldn't have been created otherwise
  -m <chmod_code> <dir_name> : used to create a directory that gives 
      the specified permissions according to the mentioned code a file
      0 : ---
      1 : --x
      2 : -w-
      3 : -wx
      4 : r--
      5 : r-x
      6 : rw-
      7 : rwx
      r = 4
      w = 2
      x = 1
  -m 755 -pv <dir_name> : to join these commands

rmdir -pv a/b/c : removes the entire tree of contents with the 
      verbose output too

rm
  -rf <folder_name> : removes the entire folder along with all 
      of its successive files and folders recursively
  -v <file_1> <file_2> <file_3> : removes the files along with 
      the verbose output
  -iv <file/folder> : prompts before each deletion

touch
  <file_name_1> <file_name_2> : creates all the files with the 
      provided names

cat
  > <file_name> : replaces (creates the file if not already created) 
      the current content with the entered content 
      (then enter -> ctrl + d to finish the content)
  >> <file> : this appends new content to the file (creates it if 
      not created) starting from a new line after the ending of the file
  <file_name> : prints out the content of the file
  <file_name_1> >> <file_name_2> : appends the content of <file_name_1> 
      to <file_name_2> starting from the next line after the ending of
      <file_name_2>
  <file_1> <file_2> > <file_3> : creates a new file <file_3> with the 
      content as the content of <file_2> appended to <file_1>
  -n <file> : prints the lines of the file and along with the line 
      numbers indexed beside them
  -E <file> : marks the endings of each line using a $
  -t <file> : marks the tabs using ^I

cp
  <file_path> <final_path> : this copies the file to the final path 
      for example if we do cp 1.txt 2.txt, it copies the content
      of 1.txt and replaces the content of 2.txt (creates it if 
      does not exist already) with it
  -i : asks for confirmation in each step
  <file_1> <file_2> <final_dir_path> : copies the files to the 
      final dir path
  -r <dir_1> <dir_2> : copies the content of the content of 
      <dir_1> into <dir_2>

mv
  <file_1> <final_path> : this moves the file to the final path
      for example, if we do mv 1.txt 2.txt, it renames the 1.txt to 
      2.txt (and overwrites the content of 2.txt if already exists)
  -i : asks for confirmation in each step
  <file_1> <file_2> <final_dir_path> : moves the files to the final 
      dir path
  <dir_name> <final_dir_path> : this can be used to move the dir or 
      rename it

zip
  <final_name> <file_1> <file_2> : this zips the files together into 
      <final_name>.zip
  -u <zip_name> <file_1> <file_2> : this adds the files to the already 
      created zip file
  -m <final_name> <file_1> <file_2> : this zips the files and deletes 
      the original files
  -r <final_name> <dir_name> : this zips the dir along with all the 
      contents inside
  -e <final_name> <file_1> : this asks for a password after zipping 
      the file and adds it for the encryption

unzip
  <zip_name> : unzips all the files in the pwd
  <zip_name> -d <dir_path> : this will extract all the files into 
      <dir_path>
  -q <zip_name> : this will extract without printing the verbose text
  -l <zip_name> : this will NOT extract the files but just print the 
      information about the contained files

chmod <chmod_code> <file_name> : changes the permissions of the file

su root/bubu : to change to the root/bubu user

head -vn <no_of_lines> <file_1> <file_2> : this prints the first 
    <no_of_lines> of the files with the title of the file as the verbose

tail
  -vn <no_of_lines> <file_1> <file_2> this prints the last 
      <no_of_lines> of the files with the title of the file as the verbose
  -f <file_1> : this monitors the file content and updates it in real 
      time as the content is changed and saved

ping <server_address> : prints the response from the website

wget
  <url> : saves the content
  -O <save_name> <url> : saves the content with the given name 
      (feh <img_name> to open the img)
  -P <final_path> <url> : this saves the file in the mentioned path
  -c <url> : this continues downloading of some file whose download 
      had been stopped midway
  -b <url> : this runs the download of the file in the background and 
      generates a log file
  -o <logfile_name.log> <url> : this generates a log file while 
      downloading the file
  -i <url_1> <url_2> : this downloads all the files (this can also 
      be done by putting all the urls inside some txt file and them 
      mentioning the name of the txt file)
  -mpk <url> : downloads the entire website and creates a local copy of it
      to host the local copy and run it, after it has been downloaded,
      we can navigate to <website_name.com> and then run python3 -m http.server

# : use # for commenting

uptime
  -p : to check for how much time the machine has been running
  -s : to check since when the machine has been running

neofetch : prints the system details (flexmax)

sudo passwd <user_account_name/root>: used for changing the password 
    of the current/root account

su <user> : changes to the mentioned user

ps
  -e : displays all the pid of the ongoing processes
  -C <process_name> : this gives the details of only the selected 
      process, for e.g. firefox

kill <pid> : kills the ongoing process

top : like task manager
top -> this enter k -> then enter pid to kill
